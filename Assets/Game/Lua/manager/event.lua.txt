---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jonny.
--- DateTime: 2020/9/24 15:45
---


local event_system = {}
local handle_generate = 0

local EventHandle = typesys.def.EventHandle {
    event_name = typesys.__unmanaged,
    id = 1,
    func = typesys.__unmanaged,
}

function event_system:add_listener(event, fun)
    if event_system[event] == nil then
        event_system[event] = {}
    end

    local eventList = event_system[event]
    table.insert(eventList, fun)

    handle_generate = handle_generate + 1
    local handle = typesys.new(EventHandle)
    handle.event_name = event
    handle.id = handle_generate
    handle.func = fun
    return handle
end

function event_system:remove_listener_handle(event_handle)
    self:remove_listener(event_handle.event_name, event_handle.func)
end

function event_system:remove_listener(event, fun)
    if event_system[event] ~= nil then
        local event_list = event_system[event]
        table.remove_arrays(event_list, fun)
    end
end

function event_system:remove_listeners(event)
    event_system[event] = nil
end

function event_system:dispatch(event, ...)
    if event_system[event] ~= nil then
        local event_list = event_system[event]
        for _, func in pairs(event_list) do
            func(...)
        end
    end
end

---@param event string @SendCommandToLua传进来
function receive_mvc_event(event,args)

    event_system:dispatch(event,args)
end

return event_system

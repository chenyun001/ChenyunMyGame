---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenyun.
--- DateTime: 2022/10/18 15:44
---
local RoleRoot = nil
local RoleRootTransForm  = nil
local _GOFind = CS.UnityEngine.GameObject.Find
local _Instantiate 			= CS.UnityEngine.GameObject.Instantiate
local type_GameObject 		= typeof(CS.UnityEngine.GameObject)
local _Vector3  			= CS.UnityEnging.Vector3
local _Game = CS.GameScript

local new = typesys.new
local GameObject = CS.UnityEngine.GameObject
local event_system = require "manager/event"
local timer = lua_framework.timer_system
require('services/player_info_services')
local assets_manager = lua_framework.assets_manager
---@type PlayerInfoProxy
local role_model = lua_framework.proxy.player_info_proxy
local game_manager = lua_framework.game_manager
local MainPanel = typesys.def.MainScreenPanel {
    __super = typesys.Panel,
    GameBattle = typesys.__unmanaged,
    playerBlood = typesys.__unmanaged,
    btn_skill_O = typesys.__unmanaged,
    btn_skill_R = typesys.__unmanaged,
    btn_skill_X = typesys.__unmanaged,
    Text_Count  = typesys.__unmanaged,
    EasyTouch   = typesys.__unmanaged,
    Player = typesys.__unmanaged,
    playerBlood = typesys.__unmanaged,
}

function MainPanel:awake()
    self.playerBlood = self.playerBlood:GetComponent(typeof(CS.ProgressControl))
    -- self.GameBattle =  GameObject.Find('GameBattle'):GetComponent(typeof(CS.GameBattle))
    -- self.role =  GameObject.Find('role'):GetComponent(typeof(CS.Role))
    -- self.step_1     =  GameObject.Find('step_1')
    -- self.obj_steps  =  GameObject.Find('Steps')
    -- self.Image_role =  GameObject.Find('role')
    -- self.GameClick  =  self.GameClick.transform:GetComponent(typeof(CS.GameClick))
    self.Text_Count = self.Text_Count.transform:GetComponent(typeof(UnityEngine.UI.Text))
   
    -- self:add_listener(NetWorkEvent.Resoult, function()
    --     GameUIManager:OpenUI("ResoultPanel.prefab")
    --     GameUIManager:CloseUI("MainPanel.prefab")
    -- end)

    self.btn_skill_O.onClick:AddListener(function()
       self.Player:PlayerSkill_O()
    end)

    self.btn_skill_R.onClick:AddListener(function()
        self.Player:PlayerSkill_R()
    end)

    self.btn_skill_X.onClick:AddListener(function()
        self.Player:PlayerSkill_X()
    end)

end

function MainPanel:InitGame()
    self:LoadRole() 
end

function MainPanel:resume()
    --self:check_guide()
end

function MainPanel:start()
    self:InitGame()
end


function MainPanel:ResSetGame()
    --self.role.isGameStart = true
end

function MainPanel:destroy()
    self:release()
end

function MainPanel:update(delta_time)

end

function MainPanel:SetPlayer(player)
	self.Player = player
end

function MainPanel:LoadRole()
	RoleRoot = _GOFind("RoleRoot")
	RoleRootTransForm = RoleRoot.transform
	local path = "Player.prefab"
	local function _CallBack(obj)
		local perfab = obj
		if perfab ~= nil then
			local go  = _Instantiate(perfab,RoleRootTransForm)
			go.name = "Player"
			--go.transform.localPosition = _Vector3(-0.36,-0.7,-13.3)
			local  componentPlayer = go:GetComponent("ComponentPlayer")
			self:SetPlayer(componentPlayer)
			self:CreatedFunc()
		end
	end
	assets_manager:CreatePrefab(path,_CallBack)
end

function MainPanel:CreatedFunc()
    self.Player:SetEasyTouch()
    _Game.Instance:AddDelegate(function(count) 
        self:ShowHits(count)
    end )
    _Game.Instance:AddDelegatePlayerInfo(function(HpValue) 
        self:ShowPlayerInfo()
    end) 
end

function MainPanel:ShowHits(count)
	if count ~= "0" then
		self.Text_Count.text = "连击+"..count
        DoTweenBridge.DoTextScale( self.Text_Count.gameObject,1.5,1,nil)
	else
		self.Text_Count.text = ""
	end
end

function MainPanel:ShowPlayerInfo(HpValue)
    local value = self.Player.Agent.BlackBoard.Health/self.Player.Agent.BlackBoard.RealMaxHealth
    self.playerBlood:UpdateProgress(value,1) 
end

return MainPanel

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jonny.
--- DateTime: 2021/1/14 17:15
---


local new = typesys.new
local delete = typesys.delete
local events = require("module/account/events")
local game_events = require("module/game_events")
require("module/account/register_panel")
require("module/account/login_panel")
require("module/account/register_success_panel")
require("module/account/automatic_login_tip")
local timer = lua_framework.timer_system

local AccountPanel = typesys.def.AccountPanel {
    __super = typesys.Panel,

    automatic_login_go = typesys.__unmanaged,
    register_panel_go = typesys.__unmanaged,
    login_panel_go = typesys.__unmanaged,
    register_success_panel_go = typesys.__unmanaged,

    automatic_login = typesys.AutomaticLogin,
    register_panel = typesys.RegisterPanel,
    login_panel = typesys.LoginPanel,
    register_success_panel = typesys.RegisterSuccessPanel,
    btn1 = typesys.__unmanaged,
    btn2 = typesys.__unmanaged,
    toggle_agree = typesys.__unmanaged,
    agree_go = typesys.__unmanaged,
    agree_tip = typesys.__unmanaged,
    tip_text = typesys.__unmanaged,
    tip_group = typesys.__unmanaged,
    btn_agree = typesys.__unmanaged,
    time = 0,
    agree_value = typesys.__unmanaged
}
---@type AccountProxy
local account_proxy = lua_framework.proxy.account_proxy

local time_info

function AccountPanel:awake()
    self:hide_all()
    self.toggle_agree = self.toggle_agree:GetComponent(typeof(UnityEngine.UI.Toggle))
    -- 实例化对象 并设置父级 用于子界面之间的跳转
    self.register_panel = new(typesys.RegisterPanel)
    self.login_panel = new(typesys.LoginPanel)
    self.register_success_panel = new(typesys.RegisterSuccessPanel)
    self.automatic_login = new(typesys.AutomaticLogin)
    
    --注入对象
    self.register_panel:init_from_cs(self.register_panel_go)
    self.login_panel:init_from_cs(self.login_panel_go)
    self.register_success_panel:init_from_cs(self.register_success_panel_go)
    self.automatic_login:init_from_cs(self.automatic_login_go)

  
    self:agree_handler()
end

function AccountPanel:agree_handler()
    self.toggle_agree.isOn=account_proxy:is_agree()
    self.toggle_agree.onValueChanged:AddListener(function(x)
        account_proxy:SetAgree(x)
    end)
    self.tip_text = self.tip_text:GetComponent(typeof(UnityEngine.UI.Text))
    self.btn_agree = self.btn_agree:GetComponent(typeof(UnityEngine.UI.Button))
    self.btn_agree.onClick:AddListener(function()
        account_proxy:SetAgree(true)
        self.agree_tip:SetActive(false)
        self.toggle_agree.isOn=account_proxy:is_agree()

    end)
    if (account_proxy:is_agree()==false) then
        self:show_agree_tip()
    end
   
end

function AccountPanel:show_agree_tip()
    self.agree_value = self.agree_value:GetComponent(typeof(UnityEngine.UI.Scrollbar))
    self.agree_value = self.agree_value.onValueChanged:AddListener(function(x)
        if (x<=0) then
            self.time = 0
            self:update_agree_time()
        end

    end)
    self.time = 21
    self.agree_tip:SetActive(true)
    self.tip_group:SetActive(false)
    time_info = timer:add_timer(1, function() self:update_agree_time() end , true)
    self:update_agree_time()


end

function AccountPanel:update_agree_time()
    self.time = self.time-1
    if (self.time <= 0) then
        
        timer:remove_timer(time_info)
        self.tip_text.text = ""
        self.tip_group:SetActive(true)
    else
        self.tip_text.text = string.format("再阅读%d秒或拉至底部可关闭",self.time)
    end
end

function AccountPanel:start()
    self.register_panel:start()
    self.login_panel:start()
    self.register_success_panel:start()
    self.automatic_login:start()

    -- 没有账号
    if not account_proxy:has_local_account() or not account_proxy.first_login then
        --显示登录界面
        self:show_login_panel()
    else
        -- 自动登录
        self:do_auto_login()
    end

    self:add_listeners()
end

function AccountPanel:update(delta_time)
    self.automatic_login:update(delta_time)
end

function AccountPanel:do_auto_login()
    local account, password = account_proxy:get_account()

    self:show_automatic_login()
    -- 倒计时完成后登录账号
    self.automatic_login:show("自动登录中,账号:" .. account, 1, function()
        local service = new(typesys.AccountService)
        service:auto_login(account, password)
    end)
end

---add_listeners 添加事件监听                         
function AccountPanel:add_listeners()
    self:add_listener(events.network_quickly_register_response, function(...)
        self:quickly_register_cb(...)
    end)
    self:add_listener(events.network_register_response, function(...)
        self:register_cb(...)
    end)
    --登录成功
    self:add_listener(game_events.account_login_success, function(...)
        self:hide_all(...)
    end)
    self:add_listener(events.show_register_ui, function(...)
        self:show_register_panel(...)
    end)
    self:add_listener(events.show_login_ui, function(...)
        self:show_login_panel(...)
    end)
    self:add_listener(events.show_register_success_ui, function(...)
        self:show_register_success_panel(...)
    end)
    self:add_listener(events.show_automatic_login_ui, function(...)
        self:show_automatic_login(...)
    end)
    self:add_listener(game_events.login_time_out,function()
        self:show_login_panel()
    end)
    self:add_listener(game_events.login_error,function()
        self:show_login_panel()
    end)

    self:add_listener(game_events.register_time_out,function()
        self:show_register_panel()
    end)
end

function AccountPanel:quickly_register_cb(response)
    --快速注册 没有错误
    if response.code == 200 then
        local username = response.account
        local password = response.password
        self:show_register_success_panel()
        self.register_success_panel:set_quickly_register_info(username, password)

        lua_framework.timer_system:add_timer(5, function()
            self:do_auto_login()
        end)
    end
end

function AccountPanel:register_cb(response)
    --注册成功 没有错误
    if response.code == 200 then
        self:do_auto_login()
    end
end

function AccountPanel:destroy()
    self.register_panel:release()
    self.login_panel:release()
    self.register_success_panel:release()
    self.automatic_login:release()

    self:release()
end

function AccountPanel:hide_all()
    self.register_panel_go:SetActive(false)
    self.login_panel_go:SetActive(false)
    self.register_success_panel_go:SetActive(false)
    self.automatic_login_go:SetActive(false)
    self.agree_go:SetActive(false)

end

---show_register_panel 显示注册界面
function AccountPanel:show_register_panel()
    self.register_panel_go:SetActive(true)
    self.login_panel_go:SetActive(false)
    self.register_success_panel_go:SetActive(false)
    self.automatic_login_go:SetActive(false)
    self.agree_go:SetActive(true)

end

---show_login_panel 显示登录界面
function AccountPanel:show_login_panel(msg)
    self.register_panel_go:SetActive(false)
    self.login_panel_go:SetActive(true)
    self.register_success_panel_go:SetActive(false)
    self.automatic_login_go:SetActive(false)
    self.agree_go:SetActive(true)

    self.login_panel:set_tips(msg)
end

---show_register_success_panel 显示注册成功界面
function AccountPanel:show_register_success_panel()
    self.register_panel_go:SetActive(false)
    self.login_panel_go:SetActive(false)
    self.register_success_panel_go:SetActive(true)
    self.automatic_login_go:SetActive(false)
    self.agree_go:SetActive(false)
end

---show_automatic_login 自动登录
function AccountPanel:show_automatic_login()
    self.register_panel_go:SetActive(false)
    self.login_panel_go:SetActive(false)
    self.register_success_panel_go:SetActive(false)
    self.automatic_login_go:SetActive(true)
    self.agree_go:SetActive(false)

end

---check_account_available
---@param account string
---@return boolean 满足
function check_account_available(account)
    if string.len(account) >= 4 and string.len(account) <= 16 then
        if string.match(account, "^[%w]+$") then
            return true
        end
    end
    return false
end

---check_pwd_available 长度
---@param pwd string
---@return boolean 满足
function check_pwd_available(pwd)
    if string.len(pwd) >= 6 and string.len(pwd) <= 16 then
        if string.match(pwd, "%d") then
            if string.match(pwd, "%a") then
                return true
            end
        end
        
    end
    return false
end

return AccountPanel
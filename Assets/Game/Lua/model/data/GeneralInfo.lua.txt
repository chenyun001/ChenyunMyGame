---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaomingwang.
--- DateTime: 2021/2/3 下午2:28
---@type ItemProxy
local item_model=nil
---@class GeneralInfo 武将数据
local general_info= typesys.def.GeneralInfo {
    
    tableId =  typesys.__unmanaged,
    lv =  typesys.__unmanaged,
    star =  typesys.__unmanaged,
    skill_lv = 1,
    hp = 0,
    ap = 0,
    skills = typesys.__unmanaged,
    excel = typesys.__unmanaged,
    general_skill_excel = typesys.__unmanaged,
    lv_excel = typesys.__unmanaged,
    name = "",
    sort = 1,
    color = 1,
    step = 1,
    vanish = false,
    unitHurt = 1,
    cardType = 1,
    activeItemId = 1,
    activateAmount = 1,
    fightVal = 1,
    skills = typesys.__unmanaged,
    show_skills = typesys.__unmanaged,
    cost = 1,
    moveSpeed = 1,
    generalInfo = typesys.__unmanaged,
    value = 0,
}


function general_info:__ctor(excel)
    if excel ~= nil then
        self.excel = excel
        self.general_skill_excel = generalData:get_general_star(excel.generalId ,1)
        self.lv_excel = generalData:get_general_level(excel.step,excel.color,1)
        if (self.general_skill_excel==nil) then
            print(excel.generalId.."星报错")
        else
            self.skills = self.general_skill_excel.skills
        end

        self.tableId = excel.generalId
        self.lv = 0
        self.star = 0
        self.hp = 0
        self.name = language_data.GetLanguage(excel.name)
        self.color = excel.color
        self.cost = excel.costCoin
        self.moveSpeed = excel.moveSpeed
        self.step = excel.step
        self.unitHurt = excel.unitHurt
        local stringTmp = string.split(excel.activateAmount, ",")
        self.activeItemId = tonumber(stringTmp[1])
        self.activateAmount = tonumber(stringTmp[2])
        self.generalInfo =nil
    end
    --self.starExcel = general_star_data
end

function general_info:set_data(generalInfo)
    self.generalInfo = generalInfo

    self.lv = generalInfo.level
    self.star = generalInfo.star
    --self.hp = generalInfo.fightVal
    --self.fightVal = generalInfo.fightVal
    self.general_skill_excel = generalData:get_general_star(self.tableId,self.star)
    self.skills = self.general_skill_excel.skills
    self.show_skills = {}
    self.lv_excel = generalData:get_general_level(self.step,self.color,self.lv)

    for i, v in ipairs(self.skills) do
        if (v~="0") then
            if (skillData:get_skill(v).isShowDetail) then
                table.insert(self.show_skills, v)
            end
            
        end
    end
end

function general_info:up_star(v)

    self.star = v.star
    self.general_skill_excel = generalData:get_general_star(v.generalId,v.star)
    self.hp = v.fightVal
    self.fightVal = v.fightVal
    self.skills = self.general_skill_excel.skills
    self.show_skills = {}
    for i, v in ipairs(self.skills) do
        if (v~="0") then

            if (skillData:get_skill(v).isShowDetail) then
                table.insert(self.show_skills, v)
            end
        end
    end
end
---@param v proto.general.GeneralLevelUpRequestAndResponse
function general_info:up_level(v)
    self.lv = v.lv
    self.hp =v.fightVal
    self.lv_excel = generalData:get_general_level(self.step,self.color,v.lv)

end

function general_info:get_fight_value()
    return self.hp
end


function general_info:isActive()
    return self.generalInfo ~= nil
end

function general_info:isCanActive()
    item_model = lua_framework.proxy.item_proxy

    if self:isActive() == true then
        return false
    elseif item_model:get_amount(self.activeItemId) >= self.activateAmount then
        return true
    end
    return false
end

function general_info:isShowInList()
    item_model = lua_framework.proxy.item_proxy

    if self.excel.npc == true then
        return false
    elseif self:isActive() then
        return true
    elseif self:isCanActive() then
        return true
    elseif item_model:get_amount(self.activeItemId) > 0 then
        return true
    end

    return false
end

function general_info:get_each_star_skills()
    return general_star_data:get_general_star(self.tableId,1).skills,
    general_star_data:get_general_star(self.tableId ,2).skills,
    general_star_data:get_general_star(self.tableId,3).skills,
    general_star_data:get_general_star(self.tableId ,4).skills,
    general_star_data:get_general_star(self.tableId ,5).skills
end

function general_info:isCanLevelUp()

end

function general_info:isCanStarUp()

end



return general_info
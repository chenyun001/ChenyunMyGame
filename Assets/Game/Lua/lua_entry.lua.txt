---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jonny.
--- DateTime: 2020/9/17 14:44
---

require("init")
require("lua-typesys/TypeSystemHeader")
local new = typesys.new
require "manager/module_manager"
require "manager/game_manager"
require "manager/assets"
require "manager/timer"
require "manager/action_pool"
require "model/proxy"
local LuaFramework = typesys.def.LuaFramework {
    instance = LuaFramework,
    proxy = typesys.Proxy,
    assets_manager = typesys.AssetsManager,
    -- 模块
    module_manager = typesys.ModuleManager,
    -- 定时器
    timer_system = typesys.TimerSystem,
    -- 行为队列
    action_pool = typesys.ActionPool,
    ---@type GameManager 游戏管理类
    game_manager = typesys.GameManager,
}
--setmetatable(lua_framework, {
--    __index = _G,
--})

function LuaFramework:__ctor()
    LuaFramework.instance = self
    ---@type Proxy 数据
    self.proxy = new(typesys.Proxy)
    ---@type AssetsManager 资源管理器
    self.assets_manager = new(typesys.AssetsManager)
    self.module_manager = new(typesys.ModuleManager)
    self.action_pool = new(typesys.ActionPool)
    ---@type TimerSystem
    self.timer_system = new(typesys.TimerSystem)
    ---@type GameManager 游戏管理类
    self.game_manager = new(typesys.GameManager)
end

function LuaFramework:start_lua_framework(lua_framework_entry)
    print("start_lua_framework...now")
    -- 因为 某些 service 要用到 lua framework中的 proxy 所以在framework 开启后导入
    require "services/include"
end

function LuaFramework.destroy_lua_framework(lua_framework_entry)
    print("lua framework destroy...")
end

function LuaFramework:tick(delta_time)
    self.timer_system:tick(delta_time)
    self.action_pool:tick(delta_time)
    self.game_manager:tick(delta_time)
    typesys.gc()
end

function LuaFramework.destroy()

end

function LuaFramework:fixed_tick(delta_time)
end

return LuaFramework